C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Development\Keil MDK4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*************************************************************************
   2          /项目名称：探测安防小车
   3          /功能：串口接收命令控制智能小车的前后左右运动，接收命令控制小车探照灯的开关
   4          /      单片机接收温湿度传感器模块的信息，超声波模块的信息，码盘测速的信息，
   5          /      并通过串口转发出去
   6          /文件名：Main.c
   7          /平台：HJ-4WD/HJ-E/HL-1智能小车 + KeilU4 + STC89C52
   8          /日期:2015年5月5日
   9          /编写：@bear+XX
  10          /*************************************************************************/
  11          //说明1：
  12          //
  13          
  14          #include<reg52.h>
  15          #include<intrins.h>
  16          /******************************变量定义**************************************/
  17          sbit P1_0 = P1^0;                         
  18          sbit P1_1 = P1^1;
  19          sbit P1_2 = P1^2;
  20          sbit P1_3 = P1^3;
  21          sbit P1_4 = P1^4;
  22          sbit P1_5 = P1^5;
  23          sbit P1_6 = P1^6;
  24          sbit P1_7 = P1^7; 
  25          #define LeftGo      {P1_4=1,P1_5=0,P1_6=1,P1_7=0;}      //左边两个电机向前走
  26          #define LeftBack    {P1_4=0,P1_5=1,P1_6=0,P1_7=1;}      //左边两个电机向后转
  27          #define LeftStop    {P1_4=0,P1_5=0,P1_6=0,P1_7=0;}      //左边两个电机停转                     
  28          #define RightGo     {P1_0=1,P1_1=0,P1_2=1,P1_3=0;}              //右边两个电机向前走
  29          #define RightBack   {P1_0=0,P1_1=1,P1_2=0,P1_3=1;}              //右边两个电机向后走
  30          #define RightStop   {P1_0=0,P1_1=0,P1_2=0,P1_3=0;}              //右边两个电机停转    
  31          
  32          
  33          sbit DhtData = P2^3;                                                    //温湿度数据输入口 
  34          unsigned char TH,TL,RH,RL,CheckDht;                             //温湿度的高和低8位
  35          unsigned char THtemp,TLtemp,RHtemp,RLtemp,CheckNum;     //温湿度读取的临时变量
  36          unsigned char DhtNum = 0;                                               //用于温湿度while循环计数，
  37          unsigned char DhtTemp;                                                  //用于温湿度读取时的变量
  38          
  39          sbit Hummaninfrare = P2^7;                                              //人体红外感应结果输入口
  40          
  41          unsigned char command;                                                  //单片机接收的命令 
  42          
  43          sbit Light = P2^0;                                                              //探照灯输出口
  44          
  45          sbit  TRIG = P2^5;                                                              //超声波发送数据口
  46          sbit  ECHO = P2^4;                                                              //超声波接收数据口,外部中断0
  47          
  48          unsigned int time =0;                                                   //超声波接收高电平的时间
  49          unsigned long S=0;                                                              //超声波测出来的障碍物距离
  50          unsigned int wave_count;
  51          unsigned int count_start;
  52          unsigned int count_end;
  53          bit wave_flag1 = 0;                                                             //超声波接收开始计数的标志，0不开始计数
  54          bit wave_flag2 = 0;
  55          bit flag_start = 0;                                                             //超声波开始是否超出范围的标志
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 2   

  56          bit flag_end = 0;                                                               //超声波接收是否超出范围的标志
  57          bit flag_send = 0;                                                              // 是否发送超声波到上位机
  58          bit distance_flag = 0;
  59          
  60          unsigned char disbuffer[4] = {0,0,0,0};                 //存储障碍物距离各个位数数值
  61          
  62          unsigned int count;                                                     //记录左电机码盘产生的脉冲数(一个脉冲相当于行驶1cm).
  63          unsigned char buffer[4] = {0,0,0,0};                    //存储小车行驶距离各位数值数组
  64          
  65          
  66          /*****************************函数声明*****************************************/
  67          void UartInit(void);                                    //串口初始化
  68          void SendByte(unsigned char dat);               //发送一个字节
  69          void InitTimer0(void);
  70          void delayms(unsigned int t);
  71          //---------------------温湿度相关函数的声明------------------------------------
  72          void Delay10Us(void);                                   //读温湿度需要的两个延时函数
  73          void DelayDht(unsigned int j);
  74          unsigned char ReadOneData(void);                //读一个字节数据
  75          void GetHumiture(void);                                 //得到温湿度的数值
  76          //---------------------超声波相关函数的声明------------------------------------
  77          void WaveStart(void);                                   //超声波测距启动函数
  78          void DisCount(void);                                    //超声波距离测量计算函数
  79          //-----------------------行驶距离相关函数的声明---------------------------------
  80          
  81          /*******************************主函数*****************************************/
  82          void main(void)
  83          {       
  84   1              UartInit();                                                     //串口初始化
  85   1              InitTimer0();                                           //定时器0初始化
  86   1              Light = 0;                                                      //初始化时不打开探照灯.
  87   1      
  88   1              while(1)
  89   1              {
  90   2                      //湿度模块
  91   2                      TR0 = 0;        
  92   2                      ES = 0;
  93   2                      GetHumiture();
  94   2                      delayms(10);
  95   2                      ES = 1;
  96   2                      SendByte('r');
  97   2                  SendByte(RH/10+0x30);
  98   2                      SendByte(RH%10+0x30);
  99   2                      SendByte('\r');
 100   2                      SendByte('\n');
 101   2                      delayms(50);    
 102   2                      //温度
 103   2                      SendByte('t');
 104   2                      SendByte(TH/10+0x30);
 105   2                      SendByte(TH%10+0x30);
 106   2                      SendByte('\r');
 107   2                      SendByte('\n'); 
 108   2                      delayms(10);
 109   2                      
 110   2                      //码盘测速得行驶距离模块                
 111   2                      EX0 = 1;                                                //开启外部中断1.
 112   2                      IT0 = 1;                                                //下降沿有效
 113   2                      IE0=0;                                                  //外部中断请求标志                                                      
 114   2                      buffer[0]=count/1000;                   //更新显示                                                                                                                                      
 115   2                  buffer[1]=count%1000/100;
 116   2                  buffer[2]=count%1000%100/10;
 117   2              buffer[3]=count %1000%100%10;   
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 3   

 118   2                      SendByte('j');
 119   2                      SendByte(buffer[0]+0x30);
 120   2                      SendByte(buffer[1]+0x30);
 121   2                      SendByte(buffer[2]+0x30);
 122   2                      SendByte(buffer[3]+0x30);
 123   2                      SendByte('\r');
 124   2                      SendByte('\n');
 125   2                      delayms(50);
 126   2                      TR0 = 1;                                                //开启计时器的计数
 127   2      
 128   2                      
 129   2                      //超声波测距离模块
 130   2                      WaveStart();                                    //启动超声波模块
 131   2                      wave_flag1 = 1;                                 //
 132   2                      while((!ECHO)&(!flag_start));                   //等待，当ECHO为1时，超声波开始接收，当等待超过100ms时，
 133   2                                                                                      //认为超出范围,
 134   2                      ES = 1;                                                 //打开串口中断
 135   2                      if(flag_start ==1)                                      //超出范围
 136   2                      {
 137   3                              disbuffer[0] = 9;               
 138   3                              disbuffer[1] = 9;
 139   3                              disbuffer[2] = 9; 
 140   3                              disbuffer[3] = 9;       
 141   3                              flag_start = 0;
 142   3                      }else                                                   //ECHO接收到高电平
 143   2                      {
 144   3                              wave_flag1 = 0;
 145   3                              count_start = 0;
 146   3      
 147   3                              wave_flag2 = 1;                         //开启是否接收超出范围的中断
 148   3                              distance_flag = 1;                      //开始计数高电平时间
 149   3                              while((ECHO)&(!flag_end));
 150   3      
 151   3                              if(flag_end ==1)                        //超出范围
 152   3                              {
 153   4                                      disbuffer[0] = 9;               
 154   4                                      disbuffer[1] = 9;
 155   4                                      disbuffer[2] = 9; 
 156   4                                      disbuffer[3] = 9;       
 157   4                                      flag_end = 0;
 158   4                              }else
 159   3                              {
 160   4                                      wave_flag2 = 0;
 161   4                                      count_end = 0;
 162   4                                      flag_send = 1;
 163   4                                      distance_flag = 0;
 164   4                              ES = 0;
 165   4                                      DisCount();
 166   4                                      wave_count = 0;                 
 167   4                              }
 168   3                      }
 169   2                      wave_flag1 = 0;
 170   2                      wave_flag2 = 0;
 171   2                      distance_flag = 0;
 172   2                      ES = 1;         
 173   2                      SendByte('z');
 174   2                      SendByte(disbuffer[0]+0x30);
 175   2                      SendByte(disbuffer[1]+0x30);
 176   2                      SendByte(disbuffer[2]+0x30);
 177   2                      SendByte(0x30);
 178   2                      SendByte('\r');
 179   2                      SendByte('\n');         
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 4   

 180   2                      TR0 = 0;                           
 181   2                      delayms(50);
 182   2                      //小车运动控制部分(在串口中断中处理)            
 183   2                      //探照灯检测部分(在串口中断中处理)              
 184   2                      
 185   2                      //人体红外感应部分
 186   2                      if(Hummaninfrare==0)                    //没有检测到高电平
 187   2                      {
 188   3                              SendByte('n');
 189   3                              SendByte(0x30);
 190   3                              SendByte('\r');
 191   3                              SendByte('\n');
 192   3                      }else
 193   2                      {
 194   3                              SendByte('p');
 195   3                              SendByte(0x30);
 196   3                              SendByte('\r');
 197   3                              SendByte('\n');                 
 198   3                      }
 199   2                      delayms(50);                                                
 200   2              }
 201   1      }
 202          
 203          /*******************************函数的定义****************************************/
 204          //------------------------------读温湿度需要的两个延时函数-------------------------
 205          //Function：在读取温湿度信息时需要的一个延时序列
 206          //Input:整数
 207          //Output：无
 208          void DelayDht(unsigned int j)
 209          {   
 210   1              unsigned char i;
 211   1          for(;j>0;j--)
 212   1          {
 213   2              for(i=0;i<27;i++);
 214   2      
 215   2          }
 216   1      }
 217          //Function：在读取温湿度信息时需要的一个延时序列，延时微妙级
 218          //Input:无
 219          //Output：无
 220          void  Delay10Us(void)
 221          {
 222   1          unsigned char i;
 223   1          i--;
 224   1          i--;
 225   1          i--;
 226   1          i--;
 227   1          i--;
 228   1          i--;
 229   1      }
 230          //------------------------------串口初始化------------------------------------------
 231          //Function：设置串口的模式，通信方式，波特率等，以及打开相应的中断
 232          void UartInit(void)
 233          {
 234   1              TMOD |= 0x21;                                           //TMOD：timer1,mode2, 8bit重装
 235   1              SCON = 0x50;                                            //SCON:模式1,8-bit UART,使能接收
 236   1              TH1=TL1=0xFD;                                           //为定时器赋初值，晶振为11.0592MHZ时，波特率为9600
 237   1              EA = 1;                                                         //总中断打开
 238   1              ES = 1;                                                         //打开串口中断
 239   1              TR1 = 1;                                                        //定时器1打开
 240   1      }
 241          //-----------------------------定时器0初始化----------------------------------------
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 5   

 242          //Function：设置定时器的初值,
 243          void InitTimer0(void)
 244          {
 245   1              TH0=0xFF;TL0=0xF6;
 246   1              ET0 = 1;                                                        //定时器中断打开
 247   1              //TR0 = 1;                                              //定时器开关打开
 248   1              //TR0 = 1;                                              //开启定时器0的计数     
 249   1      }
 250          
 251          /*----------------------------定时器0中断服务子程序-------------------------------*/
 252          void Timer0_ISR(void) interrupt 1                        //每次中断为10us
 253          {
 254   1              TH0=0xFF;
 255   1              TL0=0xF6;
 256   1      
 257   1      
 258   1              if(wave_flag1)
 259   1              {       
 260   2                      count_start++; 
 261   2                      if(count_start>=12000)
 262   2                      {
 263   3                              count_start=0;
 264   3                              flag_start = 1;
 265   3                      }
 266   2              }
 267   1              
 268   1              if(wave_flag2)
 269   1              {
 270   2                      count_end++;
 271   2                      if(count_end>=13000)
 272   2                      {
 273   3                              count_end = 0;
 274   3                              flag_end = 1;
 275   3                      }       
 276   2              }
 277   1              
 278   1              if(distance_flag)
 279   1              {
 280   2                      wave_count++;   
 281   2              }               
 282   1      }
 283          
 284          /*-----------------------------发送一个字节-----------------------------------------*/
 285          //Function：发送字符串
 286          void sendByte(unsigned char dat)
 287          {
 288   1              TI = 0;                                                         //发送标志位清零
 289   1              SBUF = dat;                                                     //将要发送的字节写入发送缓冲器
 290   1              while(!TI);
 291   1              TI = 0;
 292   1      }
 293          
 294          
 295          /*----------------------------串口中断服务子程序-------------------------------*/
 296          //接收串口发过来的数据，处理小车的运动
 297          void Uart_isr(void) interrupt 4
 298          {
 299   1         if(RI)                                                               //判断是否为接收中断
 300   1         {
 301   2                      ES = 0;                                                 //关闭串口中断
 302   2                      RI = 0;                                                 //标志位清零
 303   2                  command = SBUF;                                     //得到接收缓存器的值，并赋给接收变量command
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 6   

 304   2         }else
 305   1                 return;
 306   1              delayms(200);
 307   1              //小车运动控制部分
 308   1              switch(command)
 309   1              {
 310   2                      case 'a':                                               //向前
 311   2                      {
 312   3                              LeftGo;RightGo;
 313   3                              break;
 314   3                      }               
 315   2                      case 'b':                                               //向后
 316   2                      {
 317   3                              LeftBack;RightBack;
 318   3                              break;
 319   3                      }
 320   2                      case 'c':                                               //向左
 321   2                      {
 322   3                              LeftBack;RightGo;
 323   3                              break;
 324   3                      }
 325   2                      case 'd':                                               //向右
 326   2                      {
 327   3                              LeftGo;RightBack;
 328   3                              break;
 329   3                      }
 330   2                      case 'e':                                               //停止
 331   2                      {
 332   3                              LeftStop;RightStop;
 333   3                              break;
 334   3                      }
 335   2                      default:
 336   2                      {
 337   3                              LeftStop;RightStop;
 338   3                              break;
 339   3                      }
 340   2              }
 341   1               switch(command)
 342   1          {
 343   2                      case 'f':                                               //打开灯
 344   2                      {
 345   3                              Light = 1;break;
 346   3                      }
 347   2                      case 'h':
 348   2                      {
 349   3                          Light = 0;break;                            //关闭灯
 350   3                      }
 351   2                      default:
 352   2                      {
 353   3                              break;
 354   3                      }
 355   2              }
 356   1         ES = 1;                                                              //打开串口中断
 357   1      }
 358              
 359          /*----------------------------------外部中断0----------------------------------------*/
 360          //function：下降沿来的时候计数一次
 361          void Inter0_ISR(void) interrupt 0 using 1
 362          {
 363   1         if(command=='a')
 364   1         {
 365   2           count++;
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 7   

 366   2         }
 367   1         else if(command=='b')
 368   1         {
 369   2               if(count==0)
 370   2                      count=0;
 371   2               else
 372   2                      count--;
 373   2         }
 374   1      }
 375          
 376                                                                                                                                   
 377          /*------------------------------温湿度相关的函数------------------------------------*/
 378          //------------------------------读温湿度数据------------------------------------------
 379          //function:获得一个字节的数据                           
 380          unsigned char ReadOneData(void)                 //接收一个8位数据，先高位后低位
 381          {
 382   1              unsigned char i;
 383   1              unsigned char dat = 0;
 384   1              for(i=0;i<8;i++)
 385   1              {
 386   2                      DhtNum = 2;                                             //用于while循环计数，超时跳出循环
 387   2                      while((!DhtData)&&DhtNum++);    //dht_data数据线由DHT11拉低发送数据     
 388   2                      Delay10Us();
 389   2                      Delay10Us();
 390   2                      Delay10Us();                                    
 391   2                      DhtTemp = 0;
 392   2                      if(DhtData)DhtTemp=1;
 393   2                      DhtNum = 2;
 394   2                      while((DhtData)&&DhtNum++);
 395   2                      //超时则跳出for循环
 396   2                      if(DhtNum==1)break;
 397   2                      dat<<=1;
 398   2                      dat|=DhtTemp;
 399   2              }
 400   1              return dat;
 401   1      }
 402          
 403          //---------------------------------得温湿度数据-------------------------------------
 404          void GetHumiture(void)
 405          {
 406   1              DhtData = 0;                                            //单片机拉低数据线
 407   1              DelayDht(180);
 408   1              DhtData = 1;                                            //单片机给起始脉冲信号
 409   1              Delay10Us();
 410   1              Delay10Us();
 411   1              Delay10Us();
 412   1              Delay10Us();
 413   1              DhtData = 1;                                            //稍作延时，等待DHT11返回响应（响应为低电平）
 414   1              
 415   1              if(!DhtData)                                            //有响应就接收数据，否则不做处理
 416   1              {
 417   2                 DhtNum = 2;
 418   2                 //判断从机是否发出80us的低电平响应是否结束
 419   2                 while((!DhtData)&&DhtNum++);
 420   2                 DhtNum = 2;
 421   2                 //判断从机是否发出80us的高电平，如果发出进入数据接收状态
 422   2                 while((DhtData)&&DhtNum++);
 423   2                 //数据接收状态
 424   2                 RHtemp = ReadOneData();
 425   2                 RLtemp = ReadOneData(); 
 426   2                 THtemp = ReadOneData();
 427   2                 TLtemp = ReadOneData();
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 8   

 428   2                 CheckDht = ReadOneData();
 429   2                 DhtData = 1;                                         //总线有上拉电阻拉高，进入空闲状态
 430   2      
 431   2                 CheckNum=(RHtemp+RLtemp+THtemp+TLtemp);
 432   2                 if(CheckDht == CheckNum)
 433   2                 {
 434   3                        RH = RHtemp;
 435   3                        RL = RLtemp;
 436   3                        TH = THtemp;
 437   3                        TL = TLtemp;
 438   3                 }
 439   2              }
 440   1              delayms(2);                                                     //稍作延时处理   
 441   1      }
 442          //----------------------------------超声波测距启动函数-----------------------------------
 443          void WaveStart(void)
 444          {
 445   1          //延时600ms最好
 446   1              TRIG = 1;          //启动超声波模块
 447   1              //延时10us,使TRIG在这段时间维持高电平
 448   1              _nop_();_nop_();_nop_();
 449   1              _nop_();_nop_();_nop_();
 450   1              _nop_();_nop_();_nop_();
 451   1              _nop_();_nop_();_nop_();
 452   1              _nop_();_nop_();_nop_();
 453   1              _nop_();_nop_();_nop_();
 454   1              _nop_();_nop_();_nop_();
 455   1              TRIG = 0; 
 456   1      }
 457          
 458          //-----------------------------------超声波距离测量函数-----------------------------------              
 459          void DisCount(void)
 460          {
 461   1      
 462   1               S = (wave_count*1.7)/10;                               //算出来的单位为CM
 463   1               disbuffer[0] = S%1000/100;             
 464   1               disbuffer[1] = S%1000%100/10;
 465   1               disbuffer[2] = S%1000%10%10; 
 466   1               disbuffer[3] = 0;
 467   1      }
 468          
 469          
 470          //ms级别的延时函数
 471          void delayms(unsigned int t)
 472          {
 473   1               unsigned char temp; 
 474   1               while(t--)
 475   1               {
 476   2                       temp = 245;
 477   2                       while(temp--);
 478   2               }
 479   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1236    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
C51 COMPILER V9.01   MAIN                                                                  05/22/2015 09:22:32 PAGE 9   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
